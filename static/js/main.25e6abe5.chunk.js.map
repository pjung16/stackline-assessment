{"version":3,"sources":["dataSlice.js","Components/Header/Header.js","Components/Tag/Tag.js","Components/ProductOverview/ProductOverview.js","Components/ProductTable/ProductTable.js","App.js","App/store.js","serviceWorker.js","index.js"],"names":["dataSlice","createSlice","name","initialState","entries","reducers","sortByWeek","state","newState","slice","sales","sort","a","b","Date","weekEnding","sortByWeekReverse","sortByRetailSales","retailSales","sortByRetailSalesReverse","sortByWholesaleSales","wholesaleSales","sortByWholesaleSalesReverse","sortByUnitsSold","unitsSold","sortByUnitsSoldReverse","sortByRetailerMargin","retailerMargin","sortByRetailerMarginReverse","actions","selectEntries","data","Header","className","src","alt","Tag","text","ProductOverview","useState","selectedPage","setSelectedPage","image","title","subtitle","tags","map","tag","key","onClick","ProductTable","console","log","dispatch","useDispatch","currSort","setCurrSort","isReverse","setIsReverse","sale","toLocaleString","App","useSelector","configureStore","reducer","entriesReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.25e6abe5.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport entries from './Webdev_data2.json';\n\nexport const dataSlice = createSlice({\n  name: 'data',\n  initialState: {\n    entries: entries,\n  },\n  reducers: {\n    sortByWeek: state => {\n      const newState = state.entries.slice();\n      newState[0].sales.sort(function(a,b){\n        return new Date(a.weekEnding) - new Date(b.weekEnding)\n      });\n      state.entries = newState\n    },\n    sortByWeekReverse: (state) => {\n      const newState = state.entries.slice();\n      newState[0].sales.sort(function(a,b){\n        return new Date(b.weekEnding) - new Date(a.weekEnding)\n      });\n      state.entries = newState;\n    },\n    sortByRetailSales: (state) => {\n      const newState = state.entries.slice();\n      newState[0].sales.sort(function(a,b){\n        return new Date(a.retailSales) - new Date(b.retailSales)\n      });\n      state.entries = newState\n    },\n    sortByRetailSalesReverse: (state) => {\n      const newState = state.entries.slice();\n      newState[0].sales.sort(function(a,b){\n        return new Date(b.retailSales) - new Date(a.retailSales)\n      });\n      state.entries = newState\n    },\n    sortByWholesaleSales: (state) => {\n      const newState = state.entries.slice();\n      newState[0].sales.sort(function(a,b){\n        return new Date(a.wholesaleSales) - new Date(b.wholesaleSales)\n      });\n      state.entries = newState\n    },\n    sortByWholesaleSalesReverse: (state) => {\n      const newState = state.entries.slice();\n      newState[0].sales.sort(function(a,b){\n        return new Date(b.wholesaleSales) - new Date(a.wholesaleSales)\n      });\n      state.entries = newState\n    },\n    sortByUnitsSold: (state) => {\n      const newState = state.entries.slice();\n      newState[0].sales.sort(function(a,b){\n        return new Date(a.unitsSold) - new Date(b.unitsSold)\n      });\n      state.entries = newState\n    },\n    sortByUnitsSoldReverse: (state) => {\n      const newState = state.entries.slice();\n      newState[0].sales.sort(function(a,b){\n        return new Date(b.unitsSold) - new Date(a.unitsSold)\n      });\n      state.entries = newState\n    },\n    sortByRetailerMargin: (state) => {\n      const newState = state.entries.slice();\n      newState[0].sales.sort(function(a,b){\n        return new Date(a.retailerMargin) - new Date(b.retailerMargin)\n      });\n      state.entries = newState\n    },\n    sortByRetailerMarginReverse: (state) => {\n      const newState = state.entries.slice();\n      newState[0].sales.sort(function(a,b){\n        return new Date(b.retailerMargin) - new Date(a.retailerMargin)\n      });\n      state.entries = newState\n    },\n  },\n});\n\nexport const { \n  sortByWeek, \n  sortByWeekReverse, \n  sortByRetailSales, \n  sortByRetailSalesReverse,\n  sortByWholesaleSales,\n  sortByWholesaleSalesReverse,\n  sortByUnitsSold,\n  sortByUnitsSoldReverse,\n  sortByRetailerMargin,\n  sortByRetailerMarginReverse,\n} = dataSlice.actions;\n\nexport const selectEntries = state => state.data.entries;\n\nexport default dataSlice.reducer;","import React from 'react';\nimport './Header.css';\n\nfunction Header() {\n  return (\n    <header className=\"header-container\">\n      <img className=\"logo\" src=\"https://image4.owler.com/logo/stackline_owler_20170129_010716_original.png\" alt=\"Stackline Logo\" />\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport './Tag.css';\n\nfunction Tag({text}) {\n  return (\n    <span className=\"tag-container\">{text}</span>\n  );\n}\n\nexport default Tag;","import React, { useState } from 'react';\nimport Tag from '../Tag/Tag'\nimport './ProductOverview.css';\n\nfunction ProductOverview({ data }) {\n  const [selectedPage, setSelectedPage] = useState('Sales')\n\n  return (\n    <div className=\"product-overview-container\">\n      <div className=\"product-info-container\">\n        <img className=\"product-image\" src={data.image} alt=\"Product Pic\" />\n        <div className=\"product-title\">{data.title}</div>\n        <div className=\"product-subtitle\">{data.subtitle}</div>\n      </div>\n      <div className=\"product-tags-container\">\n        {data.tags.map((tag) => {\n          return <Tag key={tag} text={tag} />\n        })}\n      </div>\n      <div className=\"product-pages-container\">\n        <div \n          onClick={() => setSelectedPage('Overview')}\n          className={selectedPage === 'Overview' ? 'selected-page page-link' : 'page-link'}\n        >\n          Overview\n        </div>\n        <div \n          onClick={() => setSelectedPage('Sales')}\n          className={selectedPage === 'Sales' ? 'selected-page page-link' : 'page-link'}\n        >\n          Sales\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProductOverview;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  sortByWeek,\n  sortByWeekReverse,\n  sortByRetailSales,\n  sortByRetailSalesReverse,\n  sortByWholesaleSales,\n  sortByWholesaleSalesReverse,\n  sortByUnitsSold,\n  sortByUnitsSoldReverse,\n  sortByRetailerMargin,\n  sortByRetailerMarginReverse,\n} from '../../dataSlice';\nimport './ProductTable.css';\n\nfunction ProductTable({ sales }) {\n  console.log(sales)\n  const dispatch = useDispatch();\n  const [currSort, setCurrSort] = useState('Week Ending');\n  const [isReverse, setIsReverse] = useState(false)\n\n  return (\n    <div className=\"product-table-container\">\n      <table>\n        <thead>\n          <tr>\n            <th \n              onClick={() => {\n                if (currSort !== 'Week Ending') {\n                  setCurrSort('Week Ending')\n                  setIsReverse(false)\n                  dispatch(sortByWeekReverse())\n                } else {\n                  isReverse ? dispatch(sortByWeek()) : dispatch(sortByWeekReverse())\n                  setIsReverse(!isReverse)\n                }\n              }}\n              className={currSort === 'Week Ending' ? \"selected-column\" : null}\n            >\n              Week Ending <div className={isReverse && currSort === 'Week Ending' ? \"sort-arrow-reverse\" : \"sort-arrow\"}>^</div>\n            </th>\n            <th \n              onClick={() => {\n                if (currSort !== 'Retail Sales') {\n                  setCurrSort('Retail Sales')\n                  setIsReverse(false)\n                  dispatch(sortByRetailSalesReverse())\n                } else {\n                  isReverse ? dispatch(sortByRetailSales()) : dispatch(sortByRetailSalesReverse())\n                  setIsReverse(!isReverse)\n                }\n              }}\n              className={currSort === 'Retail Sales' ? \"selected-column\" : null}\n            >\n              Retail Sales <div className={isReverse && currSort === 'Retail Sales' ? \"sort-arrow-reverse\" : \"sort-arrow\"}>^</div>\n            </th>\n            <th \n              onClick={() => {\n                if (currSort !== 'Wholesale Sales') {\n                  setCurrSort('Wholesale Sales')\n                  setIsReverse(false)\n                  dispatch(sortByWholesaleSalesReverse())\n                } else {\n                  isReverse ? dispatch(sortByWholesaleSales()) : dispatch(sortByWholesaleSalesReverse())\n                  setIsReverse(!isReverse)\n                }\n              }}\n              className={currSort === 'Wholesale Sales' ? \"selected-column\" : null}\n            >\n              Wholesale Sales <div className={isReverse && currSort === 'Wholesale Sales' ? \"sort-arrow-reverse\" : \"sort-arrow\"}>^</div>\n            </th>\n            <th \n              onClick={() => {\n                if (currSort !== 'Units Sold') {\n                  setCurrSort('Units Sold')\n                  setIsReverse(false)\n                  dispatch(sortByUnitsSoldReverse())\n                } else {\n                  isReverse ? dispatch(sortByUnitsSold()) : dispatch(sortByUnitsSoldReverse())\n                  setIsReverse(!isReverse)\n                }\n              }}\n              className={currSort === 'Units Sold' ? \"selected-column\" : null}\n            >\n              Units Sold <div className={isReverse && currSort === 'Units Sold' ? \"sort-arrow-reverse\" : \"sort-arrow\"}>^</div>\n            </th>\n            <th \n              onClick={() => {\n                if (currSort !== 'Retailer Margin') {\n                  setCurrSort('Retailer Margin')\n                  setIsReverse(false)\n                  dispatch(sortByRetailerMarginReverse())\n                } else {\n                  isReverse ? dispatch(sortByRetailerMargin()) : dispatch(sortByRetailerMarginReverse())\n                  setIsReverse(!isReverse)\n                }\n              }}\n              className={currSort === 'Retailer Margin' ? \"selected-column\" : null}\n            >\n              Retailer Margin <div className={isReverse && currSort === 'Retailer Margin' ? \"sort-arrow-reverse\" : \"sort-arrow\"}>^</div>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {sales.map((sale) => {\n            return (\n              <tr key={sale.weekEnding}>\n                <td>{sale.weekEnding}</td>\n                <td>${(sale.retailSales).toLocaleString('en')}</td>\n                <td>${(sale.wholesaleSales).toLocaleString('en')}</td>\n                <td>{sale.unitsSold}</td>\n                <td>${(sale.retailerMargin).toLocaleString('en')}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default ProductTable;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  selectEntries,\r\n} from './dataSlice';\r\nimport Header from './Components/Header/Header';\r\nimport ProductOverview from './Components/ProductOverview/ProductOverview';\r\nimport ProductTable from './Components/ProductTable/ProductTable';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const entries = useSelector(selectEntries);\r\n  console.log(entries)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <div className=\"product-content-container\">\r\n        <ProductOverview data={entries[0]} />\r\n        <ProductTable sales={entries[0].sales}/>\r\n      </div>\r\n      {/* <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <Counter />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <span>\r\n          <span>Learn </span>\r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://reactjs.org/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            React\r\n          </a>\r\n          <span>, </span>\r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://redux.js.org/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Redux\r\n          </a>\r\n          <span>, </span>\r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://redux-toolkit.js.org/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Redux Toolkit\r\n          </a>\r\n          ,<span> and </span>\r\n          <a\r\n            className=\"App-link\"\r\n            href=\"https://react-redux.js.org/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            React Redux\r\n          </a>\r\n        </span>\r\n      </header> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport entriesReducer from '../dataSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    data: entriesReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './App/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}